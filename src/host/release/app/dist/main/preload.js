!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o();else if("function"==typeof define&&define.amd)define([],o);else{var n=o();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(global,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o);const n=require("electron");var r=null;const t={ipcRenderer:{sendMessage(e,o){n.ipcRenderer.send(e,o)},on(e,o){const r=(e,...n)=>o(...n);return n.ipcRenderer.on(e,r),()=>{n.ipcRenderer.removeListener(e,r)}},once(e,o){n.ipcRenderer.once(e,((e,...n)=>o(...n)))}}};return n.ipcRenderer.on("setSource",(async(e,o)=>{console.log("SOURCE CAME!"),console.log(o),r=o})),n.contextBridge.exposeInMainWorld("electron",t),n.contextBridge.exposeInMainWorld("myCustomGetDisplayMedia",(async()=>(console.log("custom get display media called!"),r))),o})()));
//# sourceMappingURL=preload.js.map